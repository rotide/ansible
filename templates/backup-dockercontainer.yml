---
- name: "BACKUP: <container_name>"
  gather_facts: no
  hosts: <host>

  vars:
    container_name: <container_name>
    base_dir: /home/rotide
    container_dir_name: "docker-{{ container_name }}"
    host_docker_dir: "{{ base_dir }}/{{ container_dir_name }}"
    ctrl_backup_dir: "{{ base_dir }}/backups/"
    logfile: "{{ ctrl_backup_dir }}{{ container_dir_name }}.log"

  tasks:
  # Stop and Delete running Docker Containers
  - name: "DOCKER: Stop and Delete containers"
    include_tasks:
      file: "{{ includes_dir }}/include_stop_docker.yml"
    when: result.exists

  # Copy ALL persistent docker container files to CONTROLLER
  - name: "RSYNC: Copy files from HOST to CONTROLLER"
    become: yes
    synchronize:
      mode: pull
      src: "{{ host_docker_dir }}"
      dest: "{{ ctrl_backup_dir }}"
      archive: true

  # UPGRADE Containers by Pulling and Starting them again.
  - name: "DOCKER: Pull and Start containers"
    shell:
      cmd: docker compose pull && docker compose up -d
      chdir: "{{ host_docker_dir }}"

  # Log a timestamp if this playbook completed without error.
  - name: "LOG: Backup Timestamp"
    delegate_to: localhost
    shell:
      cmd: "date >> {{ logfile }}"
